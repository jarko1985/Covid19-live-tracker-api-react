{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hassa\\\\Desktop\\\\api_fetch\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Header from './components/Header';\nimport CharacterGrid from './components/CharacterGrid';\nimport './App.css';\n\nfunction App() {\n  const [items, setItems] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const fetchData = async () => {\n      // const result = await axios.get(\n      //   `https://www.breakingbadapi.com/api/characters`\n      // );\n      // console.log(result.data);\n      // setItems(result.data);\n      // setIsLoading(false);\n      const result = await axios({\n        method: 'GET',\n        url: 'https://restcountries-v1.p.rapidapi.com/all',\n        headers: {\n          'content-type': 'application/octet-stream',\n          'x-rapidapi-host': 'restcountries-v1.p.rapidapi.com',\n          'x-rapidapi-key': '6b854890e9msh201af02d138ca37p10fe39jsn448dc12c95eb',\n          useQueryString: true\n        }\n      });\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CharacterGrid, {\n    isLoading: isLoading,\n    items: items,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/hassa/Desktop/api_fetch/src/App.js"],"names":["React","useState","useEffect","axios","Header","CharacterGrid","App","items","setItems","isLoading","setIsLoading","fetchData","result","method","url","headers","useQueryString"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AAEA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,IAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,SAAS,GAAG,YAAY;AAC5B;AACA;AACA;AACA;AACA;AACA;AAEA,YAAMC,MAAM,GAAG,MAAMT,KAAK,CAAC;AACzBU,QAAAA,MAAM,EAAE,KADiB;AAEzBC,QAAAA,GAAG,EAAE,6CAFoB;AAGzBC,QAAAA,OAAO,EAAE;AACP,0BAAgB,0BADT;AAEP,6BAAmB,iCAFZ;AAGP,4BACE,oDAJK;AAKPC,UAAAA,cAAc,EAAE;AALT;AAHgB,OAAD,CAA1B;AAWD,KAnBD;;AAoBAL,IAAAA,SAAS;AACV,GAtBQ,EAsBN,EAtBM,CAAT;AAwBA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,aAAD;AAAe,IAAA,SAAS,EAAEF,SAA1B;AAAqC,IAAA,KAAK,EAAEF,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD;;AAED,eAAeD,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Header from './components/Header';\nimport CharacterGrid from './components/CharacterGrid';\n\nimport './App.css';\n\nfunction App() {\n  const [items, setItems] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      // const result = await axios.get(\n      //   `https://www.breakingbadapi.com/api/characters`\n      // );\n      // console.log(result.data);\n      // setItems(result.data);\n      // setIsLoading(false);\n\n      const result = await axios({\n        method: 'GET',\n        url: 'https://restcountries-v1.p.rapidapi.com/all',\n        headers: {\n          'content-type': 'application/octet-stream',\n          'x-rapidapi-host': 'restcountries-v1.p.rapidapi.com',\n          'x-rapidapi-key':\n            '6b854890e9msh201af02d138ca37p10fe39jsn448dc12c95eb',\n          useQueryString: true,\n        },\n      });\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <div className='App'>\n      <Header />\n      <CharacterGrid isLoading={isLoading} items={items} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}